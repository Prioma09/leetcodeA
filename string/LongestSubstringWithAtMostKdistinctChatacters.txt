 Longest Substring with At Most K Distinct Characters

You are given a string 'str' and an integer ‘K’. Your task is to find the length of the largest substring with at most ‘K’ distinct characters.

For example:
You are given ‘str’ = ‘abbbbbbc’ and ‘K’ = 2, then the substrings that can be formed are [‘abbbbbb’, ‘bbbbbbc’]. Hence the answer is 7.


The string str will contain only lowercase alphabets.    
////////////////////////////////////////////////////////
public static int kDistinctChars(int k, String str) {

		// Initialise left and right pointers
		int left = 0;
		int right = 0;

		int maxLength = 0;

		// Initialise map of characters
		HashMap<Character, Integer> uniqueChars = new HashMap<>();

		// While the right pointers does not reach the end of the loop
		while (right < str.length()) {
			
			// Add the right most character of the string in the map
			char rightCh = str.charAt(right);

			if (uniqueChars.containsKey(rightCh)) {
				uniqueChars.put(rightCh, uniqueChars.get(rightCh) + 1);
			} else {
				uniqueChars.put(rightCh, 1);
			}

			// If the set has move than k unique characters then start decreasing the window
			// from left
			while (uniqueChars.size() > k) {
				char leftCh = str.charAt(left);

				// If leftCh is present in map decrease it
				if (uniqueChars.containsKey(leftCh)) {
					uniqueChars.put(leftCh, uniqueChars.get(leftCh) - 1);

					// Remove the character from the map if it becomes 0
					if (uniqueChars.get(leftCh) == 0) {
						uniqueChars.remove(leftCh);
					}
				}

				// Decrease the sliding window from left side
				left += 1;
			}

			maxLength = Math.max(maxLength, right - left + 1);

			// Increase the sliding window from the right
			right += 1;
		}

		return maxLength;
	}


time complexity : o(n)